{"ast":null,"code":"import _regeneratorRuntime from\"/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var url='https://covid19.mathdro.id/api';export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var changeableURL,_yield$axios$get,_yield$axios$get$data,confirmed,recovered,deaths,lastUpdate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:changeableURL=url;if(country){changeableURL=\"\".concat(url,\"/countries/\").concat(country);}_context.prev=2;_context.next=5;return axios.get(changeableURL);case 5:_yield$axios$get=_context.sent;_yield$axios$get$data=_yield$axios$get.data;confirmed=_yield$axios$get$data.confirmed;recovered=_yield$axios$get$data.recovered;deaths=_yield$axios$get$data.deaths;lastUpdate=_yield$axios$get$data.lastUpdate;return _context.abrupt(\"return\",{confirmed:confirmed,recovered:recovered,deaths:deaths,lastUpdate:lastUpdate});case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);console.log(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();export var fetchDailyData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get2,data,modifiedData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"\".concat(url,\"/daily\"));case 3:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;modifiedData=data.map(function(dailyData){return{confirmed:dailyData.confirmed.total,deaths:dailyData.deaths.total,date:dailyData.reportDate};});//console.log(data);\nreturn _context2.abrupt(\"return\",modifiedData);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function fetchDailyData(){return _ref2.apply(this,arguments);};}();export var fetchCountries=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$axios$get3,countries;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.get(\"\".concat(url,\"/countries\"));case 3:_yield$axios$get3=_context3.sent;countries=_yield$axios$get3.data.countries;return _context3.abrupt(\"return\",countries.map(function(country){return country.name;}));case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function fetchCountries(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/src/api/index.js"],"names":["axios","url","fetchData","country","changeableURL","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name"],"mappings":"2XAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAG,gCAAZ,CAGA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,iBAAOC,OAAP,iNACjBC,aADiB,CACDH,GADC,CAErB,GAAGE,OAAH,CAAW,CACPC,aAAa,WAAMH,GAAN,uBAAuBE,OAAvB,CAAb,CACH,CAJoB,sCAMmDH,CAAAA,KAAK,CAACK,GAAN,CAAUD,aAAV,CANnD,8EAMTE,IANS,CAMDC,SANC,uBAMDA,SANC,CAMUC,SANV,uBAMUA,SANV,CAMqBC,MANrB,uBAMqBA,MANrB,CAM6BC,UAN7B,uBAM6BA,UAN7B,iCAOV,CACHH,SAAS,CAATA,SADG,CAEHC,SAAS,CAATA,SAFG,CAGHC,MAAM,CAANA,MAHG,CAIHC,UAAU,CAAVA,UAJG,CAPU,4DAcjBC,OAAO,CAACC,GAAR,cAdiB,qEAAH,kBAATV,CAAAA,SAAS,4CAAf,CAkBP,MAAO,IAAMW,CAAAA,cAAc,2FAAG,wNAECb,CAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,WAFD,yCAEdK,IAFc,mBAEdA,IAFc,CAGhBQ,YAHgB,CAGDR,IAAI,CAACS,GAAL,CAAS,SAACC,SAAD,QAAgB,CAC1CT,SAAS,CAAES,SAAS,CAACT,SAAV,CAAoBU,KADW,CAE1CR,MAAM,CAAEO,SAAS,CAACP,MAAV,CAAiBQ,KAFiB,CAG1CC,IAAI,CAAEF,SAAS,CAACG,UAH0B,CAAhB,EAAT,CAHC,CAQtB;AARsB,iCASfL,YATe,6DAWtBH,OAAO,CAACC,GAAR,eAXsB,sEAAH,kBAAdC,CAAAA,cAAc,2CAApB,CAeP,MAAO,IAAMO,CAAAA,cAAc,2FAAG,gNAEcpB,CAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,eAFd,yCAEPoB,SAFO,mBAEff,IAFe,CAEPe,SAFO,kCAGfA,SAAS,CAACN,GAAV,CAAc,SAACZ,OAAD,QAAaA,CAAAA,OAAO,CAACmB,IAArB,EAAd,CAHe,6DAKtBX,OAAO,CAACC,GAAR,eALsB,sEAAH,kBAAdQ,CAAAA,cAAc,2CAApB","sourcesContent":["import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\n\nexport const fetchData = async (country) =>{\n    let changeableURL = url;\n    if(country){\n        changeableURL = `${url}/countries/${country}`;\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableURL);// destructured data from URL response and then also destructured values of confirmed, recovered, deths. lastUpdate from data.\n        return {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate,\n        };\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n        //console.log(data);\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: { countries }} = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    } catch (error) {\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}