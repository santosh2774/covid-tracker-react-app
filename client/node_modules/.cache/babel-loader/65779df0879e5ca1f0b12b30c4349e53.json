{"ast":null,"code":"var _jsxFileName = \"/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/src/components/Charts/Charts.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\nconst Charts = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    }; //console.log(\"Daily Data\",dailyData);\n\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length !== 0 ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgb(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 35\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgb(0,0,255,0.5)', 'rgb(0,255,0,0.5)', 'rgb(255,0,0,0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/src/components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAP;AAAuCC,EAAAA;AAAvC,CAAD,KAAqD;AAChE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMa,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACH,KAFD,CADW,CAIX;;;AACAY,IAAAA,QAAQ;AACX,GANQ,EAMP,EANO,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,KAAqB,CAArB,gBAA0B,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAACC,MAAAA,MAAM,EAACL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAaA,IAA3B,CAAR;AAA0CC,MAAAA,QAAQ,EAAC,CAAC;AACtFb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEV,UAAAA;AAAF,SAAD,KAAkBA,SAAhC,CADgF;AAEtFa,QAAAA,KAAK,EAAE,UAF+E;AAGtFC,QAAAA,WAAW,EAAC,SAH0E;AAItFC,QAAAA,IAAI,EAAE;AAJgF,OAAD,EAKvF;AACEhB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAER,UAAAA;AAAF,SAAD,KAAeA,MAA7B,CADR;AAEEW,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAC,KAHd;AAIEE,QAAAA,eAAe,EAAE,kBAJnB;AAKED,QAAAA,IAAI,EAAE;AALR,OALuF;AAAnD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,GAWU,IAZd;AAeA,QAAME,QAAQ,GACVjB,SAAS,gBAAG,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE;AACnBS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADW;AAEnBG,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAC,QADC;AAEPG,QAAAA,eAAe,EAAE,CAAC,kBAAD,EAAqB,kBAArB,EAAyC,kBAAzC,CAFV;AAGPjB,QAAAA,IAAI,EAAC,CAACC,SAAS,CAACkB,KAAX,EAAkBjB,SAAS,CAACiB,KAA5B,EAAmChB,MAAM,CAACgB,KAA1C;AAHE,OAAD;AAFS,KAAX;AAQZ,IAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAC;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAT;AAA2BC,MAAAA,KAAK,EAAC;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAeE,QAAAA,IAAI,EAAE,oBAAmBnB,OAAQ;AAAhD;AAAjC,KARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAQ0F,IATvG;AAWA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC0B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,OAAO,GAAGc,QAAH,GAAaV,SADzB,CADJ;AAKH,CAzCD;;AA2CA,eAAeT,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api'\nimport { Line, Bar } from 'react-chartjs-2'\nimport styles from './Charts.module.css'\n\n\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() =>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        //console.log(\"Daily Data\",dailyData);\n        fetchAPI();\n    },[]);\n    const lineChart = (\n        dailyData.length !== 0 ? (<Line data={{labels:dailyData.map(({ date })=> date), datasets:[{\n            data: dailyData.map(({ confirmed })=> confirmed),\n            label: 'Infected',\n            borderColor:'#3333ff',\n            fill: true\n        },{\n            data: dailyData.map(({ deaths })=> deaths),\n            label: 'Deaths',\n            borderColor:'red',\n            backgroundColor: 'rgb(255,0,0,0.5)',\n            fill: true\n        }]}}/>) : null\n    );\n\n    const barChart = (\n        confirmed ? <Bar data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets: [{\n                label:'People',\n                backgroundColor: ['rgb(0,0,255,0.5)', 'rgb(0,255,0,0.5)', 'rgb(255,0,0,0.5)'],\n                data:[confirmed.value, recovered.value, deaths.value]\n            }]\n        }} \n        options={{ legend:{display: false}, title:{display: true,text:`Current state in ${country}`}}}/> : null\n    )\n    return (\n        <div className={styles.container}>\n            {country ? barChart: lineChart}\n        </div>\n    )\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}