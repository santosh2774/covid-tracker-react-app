{"ast":null,"code":"import _regeneratorRuntime from\"/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{fetchDailyData}from'../../api';import{Line,Bar}from'react-chartjs-2';import styles from'./Charts.module.css';var Charts=function Charts(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();//console.log(\"Daily Data\",dailyData);\nfetchAPI();},[]);var lineChart=dailyData.length!==0?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'red',backgroundColor:'rgb(255,0,0,0.5)',fill:true}]}}):null;var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{label:'People',backgroundColor:['rgb(0,0,255,0.5)','rgb(0,255,0,0.5)','rgb(255,0,0,0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Charts;","map":{"version":3,"sources":["/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/src/components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":"0jBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAqD,oBAAnDC,IAAmD,CAA5CC,SAA4C,WAA5CA,SAA4C,CAAjCC,SAAiC,WAAjCA,SAAiC,CAAtBC,MAAsB,WAAtBA,MAAsB,CAAbC,OAAa,MAAbA,OAAa,eAC9BX,QAAQ,CAAC,EAAD,CADsB,wCACzDY,SADyD,eAC9CC,YAD8C,eAGhEZ,SAAS,CAAC,UAAK,CACX,GAAMa,CAAAA,QAAQ,2FAAG,+IACbD,YADa,uBACMX,CAAAA,cAAc,EADpB,qHAAH,kBAARY,CAAAA,QAAQ,2CAAd,CAGA;AACAA,QAAQ,GACX,CANQ,CAMP,EANO,CAAT,CAOA,GAAMC,CAAAA,SAAS,CACXH,SAAS,CAACI,MAAV,GAAqB,CAArB,cAA0B,oBAAC,IAAD,EAAM,IAAI,CAAE,CAACC,MAAM,CAACL,SAAS,CAACM,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAaA,CAAAA,IAAb,EAAd,CAAR,CAA0CC,QAAQ,CAAC,CAAC,CACtFb,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGV,CAAAA,SAAH,OAAGA,SAAH,OAAkBA,CAAAA,SAAlB,EAAd,CADgF,CAEtFa,KAAK,CAAE,UAF+E,CAGtFC,WAAW,CAAC,SAH0E,CAItFC,IAAI,CAAE,IAJgF,CAAD,CAKvF,CACEhB,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGR,CAAAA,MAAH,OAAGA,MAAH,OAAeA,CAAAA,MAAf,EAAd,CADR,CAEEW,KAAK,CAAE,QAFT,CAGEC,WAAW,CAAC,KAHd,CAIEE,eAAe,CAAE,kBAJnB,CAKED,IAAI,CAAE,IALR,CALuF,CAAnD,CAAZ,EAA1B,CAWU,IAZd,CAeA,GAAME,CAAAA,QAAQ,CACVjB,SAAS,cAAG,oBAAC,GAAD,EAAK,IAAI,CAAE,CACnBS,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CADW,CAEnBG,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAC,QADC,CAEPG,eAAe,CAAE,CAAC,kBAAD,CAAqB,kBAArB,CAAyC,kBAAzC,CAFV,CAGPjB,IAAI,CAAC,CAACC,SAAS,CAACkB,KAAX,CAAkBjB,SAAS,CAACiB,KAA5B,CAAmChB,MAAM,CAACgB,KAA1C,CAHE,CAAD,CAFS,CAAX,CAQZ,OAAO,CAAE,CAAEC,MAAM,CAAC,CAACC,OAAO,CAAE,KAAV,CAAT,CAA2BC,KAAK,CAAC,CAACD,OAAO,CAAE,IAAV,CAAeE,IAAI,4BAAqBnB,OAArB,CAAnB,CAAjC,CARG,EAAH,CAQ0F,IATvG,CAWA,mBACI,2BAAK,SAAS,CAAEN,MAAM,CAAC0B,SAAvB,EACKpB,OAAO,CAAGc,QAAH,CAAaV,SADzB,CADJ,CAKH,CAzCD,CA2CA,cAAeT,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api'\nimport { Line, Bar } from 'react-chartjs-2'\nimport styles from './Charts.module.css'\n\n\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() =>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        //console.log(\"Daily Data\",dailyData);\n        fetchAPI();\n    },[]);\n    const lineChart = (\n        dailyData.length !== 0 ? (<Line data={{labels:dailyData.map(({ date })=> date), datasets:[{\n            data: dailyData.map(({ confirmed })=> confirmed),\n            label: 'Infected',\n            borderColor:'#3333ff',\n            fill: true\n        },{\n            data: dailyData.map(({ deaths })=> deaths),\n            label: 'Deaths',\n            borderColor:'red',\n            backgroundColor: 'rgb(255,0,0,0.5)',\n            fill: true\n        }]}}/>) : null\n    );\n\n    const barChart = (\n        confirmed ? <Bar data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets: [{\n                label:'People',\n                backgroundColor: ['rgb(0,0,255,0.5)', 'rgb(0,255,0,0.5)', 'rgb(255,0,0,0.5)'],\n                data:[confirmed.value, recovered.value, deaths.value]\n            }]\n        }} \n        options={{ legend:{display: false}, title:{display: true,text:`Current state in ${country}`}}}/> : null\n    )\n    return (\n        <div className={styles.container}>\n            {country ? barChart: lineChart}\n        </div>\n    )\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}