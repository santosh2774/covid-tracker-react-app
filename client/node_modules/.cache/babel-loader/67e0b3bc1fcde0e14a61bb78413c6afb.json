{"ast":null,"code":"import _regeneratorRuntime from\"/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{NativeSelect,FormControl}from'@material-ui/core';import styles from'./CountryPicker.module.css';import{fetchCountries}from'../../api';var CountryPicker=function CountryPicker(_ref){var handleCountyChange=_ref.handleCountyChange;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),fetchedCountries=_useState2[0],setFetchedCountries=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setFetchedCountries;_context.next=3;return fetchCountries();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[setFetchedCountries]);//console.log(\"fetchedCountries\", fetchedCountries);\nreturn/*#__PURE__*/React.createElement(FormControl,{className:styles.formControl},/*#__PURE__*/React.createElement(NativeSelect,{defaultValue:\"\",onChange:function onChange(e){return handleCountyChange(e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Global\"),fetchedCountries.map(function(country,i){return/*#__PURE__*/React.createElement(\"option\",{key:i,value:country},country);})));};export default CountryPicker;","map":{"version":3,"sources":["/media/santosh/35d49dfe-5121-4704-8fea-328ccd7c4607/covid_tracker/client/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","fetchCountries","CountryPicker","handleCountyChange","fetchedCountries","setFetchedCountries","fetchAPI","formControl","e","target","value","map","country","i"],"mappings":"0jBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,YAAT,CAAuBC,WAAvB,KAAyC,mBAAzC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,OAASC,cAAT,KAA+B,WAA/B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA4B,IAAzBC,CAAAA,kBAAyB,MAAzBA,kBAAyB,eACEP,QAAQ,CAAC,EAAD,CADV,wCACvCQ,gBADuC,eACrBC,mBADqB,eAG9CR,SAAS,CAAC,UAAM,CACZ,GAAMS,CAAAA,QAAQ,2FAAG,+IACbD,mBADa,uBACaJ,CAAAA,cAAc,EAD3B,qHAAH,kBAARK,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACX,CALQ,CAKN,CAACD,mBAAD,CALM,CAAT,CAMA;AAEA,mBACI,oBAAC,WAAD,EAAa,SAAS,CAAEL,MAAM,CAACO,WAA/B,eACI,oBAAC,YAAD,EAAc,YAAY,CAAC,EAA3B,CAA8B,QAAQ,CAAE,kBAACC,CAAD,QAAOL,CAAAA,kBAAkB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzB,EAAxC,eACI,8BAAQ,KAAK,CAAC,EAAd,WADJ,CAEPN,gBAAgB,CAACO,GAAjB,CAAqB,SAACC,OAAD,CAAUC,CAAV,qBAAgB,8BAAQ,GAAG,CAAEA,CAAb,CAAgB,KAAK,CAAED,OAAvB,EAAiCA,OAAjC,CAAhB,EAArB,CAFO,CADJ,CADJ,CAQH,CAnBD,CAqBA,cAAeV,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl} from '@material-ui/core'\n\nimport styles from './CountryPicker.module.css'\nimport { fetchCountries } from '../../api'\n\nconst CountryPicker = ({ handleCountyChange }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchedCountries]);\n    //console.log(\"fetchedCountries\", fetchedCountries);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountyChange(e.target.value)}>\n                <option value=\"\">Global</option>\n    {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;"]},"metadata":{},"sourceType":"module"}