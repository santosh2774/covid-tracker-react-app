{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountyChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImage","image","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b16f70ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\n\nimport Countup from 'react-countup'\nimport cx from 'classnames'\n\nimport styles from './Cards.module.css'\n\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {   \n    if(!confirmed){\n        return 'Loading ... ';\n    }\n\n    return (        \n        <div className=\"{styles.container}\">\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <Countup start={0} end={confirmed.value} duration={2.5} separator=\",\"/>                        \n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">\n                            Number of active caces of COVID-19\n                        </Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Recoverd\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            <Countup start={0} end={recovered.value} duration={2.5} separator=\",\"/>                        \n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">\n                            Number of recoveries from of COVID-19\n                        </Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Deaths\n                        </Typography>\n                        <Typography variant=\"h5\">\n                            <Countup start={0} end={deaths.value} duration={2.5} separator=\",\"/>                        \n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">\n                            Number of deaths caces caused by COVID-19\n                        </Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\n\nexport const fetchData = async (country) =>{\n    let changeableURL = url;\n    if(country){\n        changeableURL = `${url}/countries/${country}`;\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableURL);// destructured data from URL response and then also destructured values of confirmed, recovered, deths. lastUpdate from data.\n        return {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate,\n        };\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n        //console.log(data);\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: { countries }} = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api'\nimport { Line, Bar } from 'react-chartjs-2'\nimport styles from './Charts.module.css'\n\n\nconst Charts = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() =>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        //console.log(\"Daily Data\",dailyData);\n        fetchAPI();\n    },[]);\n    const lineChart = (\n        dailyData.length !== 0 ? (<Line data={{labels:dailyData.map(({ date })=> date), datasets:[{\n            data: dailyData.map(({ confirmed })=> confirmed),\n            label: 'Infected',\n            borderColor:'#3333ff',\n            fill: true\n        },{\n            data: dailyData.map(({ deaths })=> deaths),\n            label: 'Deaths',\n            borderColor:'red',\n            backgroundColor: 'rgb(255,0,0,0.5)',\n            fill: true\n        }]}}/>) : null\n    );\n\n    const barChart = (\n        confirmed ? <Bar data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets: [{\n                label:'People',\n                backgroundColor: ['rgb(0,0,255,0.5)', 'rgb(0,255,0,0.5)', 'rgb(255,0,0,0.5)'],\n                data:[confirmed.value, recovered.value, deaths.value]\n            }]\n        }} \n        options={{ legend:{display: false}, title:{display: true,text:`Current state in ${country}`}}}/> : null\n    )\n    return (\n        <div className={styles.container}>\n            {country ? barChart: lineChart}\n        </div>\n    )\n}\n\nexport default Charts;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl} from '@material-ui/core'\n\nimport styles from './CountryPicker.module.css'\nimport { fetchCountries } from '../../api'\n\nconst CountryPicker = ({ handleCountyChange }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchedCountries]);\n    //console.log(\"fetchedCountries\", fetchedCountries);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountyChange(e.target.value)}>\n                <option value=\"\">Global</option>\n    {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React, { Component } from 'react';\nimport { Cards, Charts, CountryPicker } from './components'\nimport styles from './App.module.css';\nimport { fetchData } from './api'\nimport coronaImage from './images/image.png'\n\nclass App extends Component {\n    state = {\n        data: {},\n        country: ''\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n        console.log(\"fetchedData\", fetchedData);\n        this.setState({ data: fetchedData});\n    }\n\n    handleCountyChange = async (country) => {\n        \n        //fetch the data\n        const fetchedData = await fetchData(country);\n        console.log(fetchedData);\n        //set the data\n        this.setState({ data: fetchedData, country: country});\n    }\n\n    render() {\n        const { data, country } = this.state;\n        console.log(\"data\", data);\n        return (\n            <div className={styles.container}>\n                <img src={coronaImage} className={styles.image} alt=\"COVID-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountyChange={this.handleCountyChange}/>\n                <Charts data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}